dependencies {
  compile group: 'com.google.android', name: 'android', version: '2.3.1', transitive: false
  compile group: 'org.eclipse.swt.win32.win32', name: 'x86', version: '3.3.0-v3346', transitive: false
}

jar {
  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
    )
  }
}

task testJar(type: Jar) {
  classifier = 'tst'

  from sourceSets.test.classes

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
    )
  }
}

task baseJar(type: Jar) {
  classifier = 'base'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/android/**'
  exclude 'org/pushingpixels/trident/swing/**'
  exclude 'org/pushingpixels/trident/swt/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
    )
  }
}

task androidJar(type: Jar) {
  classifier = 'android'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/swing/**'
  exclude 'org/pushingpixels/trident/swt/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
    )
  }
}

task swingJar(type: Jar) {
  classifier = 'swing'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/android/**'
  exclude 'org/pushingpixels/trident/swt/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
    )
  }
}

task swtJar(type: Jar) {
  classifier = 'swt'

  from sourceSets.main.classes
  exclude 'org/pushingpixels/trident/android/**'
  exclude 'org/pushingpixels/trident/swing/**'

  manifest {
    attributes(
        "Trident-Version": version,
        "Trident-VersionName": versionKey,
    )
  }
}

artifacts {
  maven baseJar
  maven androidJar
  maven swingJar
  maven swtJar
}


uploadArchives {
  try {
    def x = [deployUsername, deployPassword]
  } catch (Exception e) {
    deployUsername = 'unset'
    deployPassword = ''
  }
  repositories {
    mavenDeployer {
      repository(url: "http://devtest_java:81/artifactory/libs-releases-local")
      configurePOM(pom)
    }
  }
}

install {
  configurePOM(repositories.mavenInstaller.pom)
}

private def configurePOM(def pom) {
  configureBasePom(pom)
  pom.project {
    name "trident"
    description "A fork of @kirilcool's trident project"
    url "http://insubstantial.github.com/halberd"
  }
  // deal with a gradle bug where transitive=false is not passed into the generated POM
  pom.whenConfigured {cpom ->
    cpom.dependencies*.scope = 'provided'
  }
}

